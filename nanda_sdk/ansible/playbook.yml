---
- name: Setup Internet of Agents (Non-Root)
  hosts: servers
  become: no
  vars:
    home_dir: "{{ ansible_env.HOME }}"
    app_dir: "{{ home_dir }}/internet_of_agents"
    venv_path: "{{ app_dir }}/venv"
    cert_dir: "{{ home_dir }}/.local/ssl"
    service_port: 8080
    ssl_port: 8443

  tasks:
    - name: Check if required Python packages are available
      command: python3 -c "import venv, subprocess, ssl"
      register: python_check
      failed_when: false

    - name: Display Python dependency info
      debug:
        msg: |
          ⚠️  If this fails, you may need to install: python3-venv
          Run: sudo apt install python3-venv (requires sudo once)
      when: python_check.rc != 0

    - name: Ensure user has git installed
      command: which git
      register: git_check
      failed_when: false

    - name: Display git dependency info
      debug:
        msg: |
          ⚠️  Git is required but not found. 
          Run: sudo apt install git (requires sudo once)
      when: git_check.rc != 0

    - name: Create user directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ app_dir }}"
        - "{{ cert_dir }}"
        - "{{ home_dir }}/.local/bin"
        - "{{ home_dir }}/.config/systemd/user"

    - name: Clone internet_of_agents repository
      git:
        repo: "{{ github_repo }}"
        dest: "{{ app_dir }}"
        version: main
        force: yes
        clone: yes
        update: yes
        accept_hostkey: yes

    - name: Create Python virtual environment
      command: python3 -m venv "{{ venv_path }}"
      args:
        creates: "{{ venv_path }}"

    - name: Install Python requirements in virtual environment
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        state: present
        virtualenv: "{{ venv_path }}"

    - name: Create self-signed SSL certificate for development
      block:
        - name: Generate private key
          openssl_privatekey:
            path: "{{ cert_dir }}/privkey.pem"
            size: 2048
          
        - name: Generate certificate signing request
          openssl_csr:
            path: "{{ cert_dir }}/cert.csr"
            privatekey_path: "{{ cert_dir }}/privkey.pem"
            common_name: "{{ domain_name }}"
            
        - name: Generate self-signed certificate
          openssl_certificate:
            path: "{{ cert_dir }}/fullchain.pem"
            privatekey_path: "{{ cert_dir }}/privkey.pem"
            csr_path: "{{ cert_dir }}/cert.csr"
            provider: selfsigned
      rescue:
        - name: Create simple self-signed cert using openssl command
          shell: |
            openssl req -x509 -newkey rsa:2048 -keyout "{{ cert_dir }}/privkey.pem" \
            -out "{{ cert_dir }}/fullchain.pem" -days 365 -nodes \
            -subj "/C=US/ST=State/L=City/O=Organization/CN={{ domain_name }}"
          args:
            creates: "{{ cert_dir }}/fullchain.pem"

    - name: Update .bashrc with environment variables
      lineinfile:
        path: "{{ home_dir }}/.bashrc"
        line: "{{ item }}"
        state: present
        create: yes
      with_items:
        - 'export ANTHROPIC_API_KEY="{{ anthropic_api_key }}"'
        - 'export SMITHERY_API_KEY="{{ smithery_api_key }}"'
        - 'export VIRTUAL_ENV="{{ venv_path }}"'
        - 'export PATH="${VIRTUAL_ENV}/bin:$PATH"'

    - name: Make start_running_agents.sh executable
      file:
        path: "{{ app_dir }}/agents/start_running_agents.sh"
        mode: '0755'

    - name: Update startup script to use user paths
      replace:
        path: "{{ app_dir }}/agents/start_running_agents.sh"
        regexp: '/opt/internet_of_agents'
        replace: "{{ app_dir }}"

    - name: Update startup script environment file path
      replace:
        path: "{{ app_dir }}/agents/start_running_agents.sh"
        regexp: '/etc/internet_of_agents.env'
        replace: "{{ home_dir }}/.config/internet_of_agents.env"

    - name: Create user environment file
      copy:
        dest: "{{ home_dir }}/.config/internet_of_agents.env"
        content: |
          ANTHROPIC_API_KEY={{ anthropic_api_key }}
          VIRTUAL_ENV={{ venv_path }}
          AGENT_ID_PREFIX={{ agent_id_prefix }}
          DOMAIN_NAME={{ domain_name }}
          SMITHERY_API_KEY={{ smithery_api_key }}
          REGISTRY_URL={{ registry_url }}
          SERVICE_PORT={{ service_port }}
          SSL_PORT={{ ssl_port }}
          CERT_PATH={{ cert_dir }}/fullchain.pem
          KEY_PATH={{ cert_dir }}/privkey.pem
          {% if num_agents is defined %}
          NUM_AGENTS={{ num_agents }}
          {% endif %}
        mode: '0644'

    - name: Create user systemd service
      template:
        src: templates/internet_of_agents_user.service.j2
        dest: "{{ home_dir }}/.config/systemd/user/internet_of_agents.service"
        mode: '0644'

    - name: Reload user systemd daemon
      systemd:
        daemon_reload: yes
        scope: user

    - name: Enable and start user service
      systemd:
        name: internet_of_agents
        state: started
        enabled: yes
        scope: user
        daemon_reload: yes

    - name: Create startup script for convenience
      copy:
        dest: "{{ home_dir }}/.local/bin/start-nanda-agents"
        content: |
          #!/bin/bash
          source {{ home_dir }}/.config/internet_of_agents.env
          cd {{ app_dir }}/agents
          {{ app_dir }}/agents/start_running_agents.sh
        mode: '0755'

    - name: Display agent information
      debug:
        msg: |
          ===================================================
          🎉 Your agent is now ready! 
          
          📍 Running on non-privileged ports:
          - HTTP: http://{{ domain_name }}:{{ service_port }}
          - HTTPS: https://{{ domain_name }}:{{ ssl_port }} (self-signed cert)
          
          🌐 Access your agent{% if num_agents is defined and num_agents > 1 %}s{% endif %} at:
          {% if num_agents is defined and num_agents > 1 %}
          {% for i in range(num_agents) %}
             Agent {{ i + 1 }}: https://chat.nanda-registry.com/landing.html?agentId=agents{{ agent_id_prefix }}{{ i }}&port={{ ssl_port }}
          {% endfor %}
          {% else %}
          https://chat.nanda-registry.com/landing.html?agentId=agents{{ agent_id_prefix }}0&port={{ ssl_port }}
          {% endif %}
          
          🔧 Management commands:
          - Start: systemctl --user start internet_of_agents
          - Stop: systemctl --user stop internet_of_agents  
          - Status: systemctl --user status internet_of_agents
          - Logs: journalctl --user -u internet_of_agents -f
          
          📁 Files located in: {{ app_dir }}
          🔐 SSL certs in: {{ cert_dir }}
          ===================================================
      no_log: false 
